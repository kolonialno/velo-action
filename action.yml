name: Velo
author: Oda
description: Velo
inputs:
  create_release:
    description: |-
      Create a release on Octopus Deploy and save artifacts in the Velo Artifacts bucket.
      If an environment in 'deploy_to_environments' is set, and the release does not exists, one will be created.
    required: false
    default: 'False'
  deploy_to_environments:
    description: |-
      If specified trigger a deployment to the environment.
      Can be multiple values by seperating environment names by a comma. Example 'dev,staging,prod'.
    required: false
    default: None
  log_level:
    description: |-
      Logging level. Can be any of CRITICAL, FATAL, ERROR, WARN, WARNING, INFO, DEBUG.
    required: false
    default: INFO
  octopus_api_key_secret:
    description: |-
      Name of the GCP secret containing the Octopus Deploy api key.
    required: false
    default: 'velo_action_octopus_api_key'
  octopus_server_secret:
    description: |-
      Name of the GCP secret containing the Octopus Deploy server url.
    required: false
    default: 'velo_action_octopus_server'
  service_account_key:
    description: |-
      A Google Service account key to use for authentication. This should be the JSON
      formatted private key which can be exported from the Cloud Console.
    required: false
    default: None
  tenants:
    description: |-
      If specified trigger a deploy to the spesified tenants.
      Can be multiple values by seperating tenant names by a comma. Example 'fc:osl1,fc:rd1'.
      Will only deploy to environments listed in the 'deploy_to_environments' variable.
    required: false
    default: None
  velo_artifact_bucket_secret:
    description: |-
      Name of the GCP secret containing the name of the Velo actifact bucket.
    required: false
    default: 'velo_action_artifacts_bucket_name'
  version:
    description: |-
      Version used to generate release and tag image. Defaults to the shortened git hash (`git rev-parse --short HEAD`).
      NOTE: The length of the Git hash is dynamic. It can be longer if it is not unique.
    required: false
    default: None
  wait_for_success_seconds:
    description: Waits the given number of seconds until the deployment is completed. The step fails If it does not complete in the given period or if the deployment has an error. A value of 0 will not verify the success or wait for completion.
    required: false
    default: '0'
  wait_for_deployment:
    deprecationMessage: Please use 'wait_for_success_seconds' instead.
    description: |-
      Whether to wait synchronously for deployment in Octopus Deploy to finish.
    required: false
    default: 'False'
  workspace:
    description: |-
      Path to the folder containing the .deploy folder. Default is the root of the repository.
      The folder must be in a Git repository to use automated version numbers.
    required: false
    default: None
  token:
    description: |-
      Personal access token (PAT) used to fetch the repository. The PAT is configured
      with the local git config, which enables your scripts to run authenticated git
      commands. The post-job step removes the PAT.
      We recommend using a service account with the least permissions necessary.
      Also when generating a new PAT, select the least scopes necessary.
      [Learn more about creating and using encrypted secrets](https://help.github.com/en/actions/automating-your-workflow-with-github-actions/creating-and-using-encrypted-secrets)
    required: false
    default: ${{ github.token }}
  preceding_run_ids:
    description: |-
      Id of preceding workflows.
    required: false
    default: ${{ github.event.workflow_run.id }}
outputs:
  version:
    description: |-
      Version used to crate release and tag image.
runs:
  using: docker
  image: 'docker://europe-docker.pkg.dev/nube-hub/docker-public/velo-action:1.0.17-fix-trace-init.1'
  args:
    - ${{ inputs.version }}
    - ${{ inputs.create_release }}
    - ${{ inputs.tenants }}
    - ${{ inputs.progress }}
    - ${{ inputs.wait_for_deployment }}
    - ${{ inputs.service_account_key }}
    - ${{ inputs.octopus_server_secret }}
    - ${{ inputs.octopus_api_key_secret }}
    - ${{ inputs.velo_artifact_bucket_secret }}
    - ${{ inputs.token }}
    - ${{ inputs.preceding_run_ids }}
