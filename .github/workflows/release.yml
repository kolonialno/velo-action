---
name: Release

on:
  push:
    branches:
      - main
      - release/**

jobs:
  update_action_image:
    name: Update image version in action.yml
    runs-on: ubuntu-20.04
    if: ${{ !github.event.pull_request.draft }}
    outputs:
      version: ${{ steps.gitversion.outputs.version }}
      commit_hash: ${{ steps.auto-commit-action.outputs.commit_hash }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup python
        uses: ./.github/actions/setup-python

      - name: Generate version
        uses: ./.github/actions/gitversion
        id: gitversion

      - name: Set image version to '${{ steps.gitversion.outputs.version }}' in action.yml
        uses: mikefarah/yq@v4.27.2
        with:
          cmd: yq -i '.runs.image = "docker://europe-docker.pkg.dev/nube-hub/docker-public/velo-action:${{ steps.gitversion.outputs.version }}"' action.yml

      - name: Cat action.yml to see changes
        run: |
          cat action.yml

      - name: Update pyproject.toml version ${{ steps.gitversion.outputs.version }}
        run: poetry version ${{ steps.gitversion.outputs.version }}

      # Do not tag the commit
      - name: Commit action.yml and pyproject.toml
        uses: stefanzweifel/git-auto-commit-action@v4.14.0
        id: auto-commit-action
        with:
          file_pattern: action.yml pyproject.toml
          repository: .
          commit_message: Release ${{ steps.gitversion.outputs.version }}

#  test_main:
#    name: Test velo action on main
#    runs-on: ubuntu-20.04
#    needs:
#      - update_action_image
#    steps:
#      - name: Checkout ${{ needs.update_action_image.outputs.commit_hash }}
#        uses: actions/checkout@v3
#        with:
#          ref: ${{ needs.update_action_image.outputs.commit_hash }}
#
#      - name: Test velo generate version from main
#        uses: kolonialno/velo-action@main
#        id: velo
#
#      - name: Get git short rev
#        shell: bash
#        id: short_ref
#        run: |
#          echo "::set-output name=sha::$(git rev-parse --short HEAD)"
#
#      - name: Fail if version command is not correct
#        shell: bash
#        if: ${{ steps.velo.outputs.version != steps.short_ref.outputs.sha }}
#        run: |
#          echo "Velo generated version is: ${{ steps.velo.outputs.version }}"
#          echo "Git sha is: ${{ steps.short_ref.outputs.sha }}"
#          echo "Version is wrong"
#          exit 1

  release:
    name: Create Github release
    runs-on: ubuntu-20.04
    needs:
      - update_action_image
#      - test_main
    steps:
      - name: Checkout ${{ needs.update_action_image.outputs.commit_hash }}
        uses: actions/checkout@v3
        with:
          ref: ${{ needs.update_action_image.outputs.commit_hash }}

      # The commits is automatically tagged when the draft is promoted to a release
      # in the Github UI
      - name: Create Github release v${{ needs.update_action_image.outputs.version }}
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          name: v${{ needs.update_action_image.outputs.version }}
          tag_name: v${{ needs.update_action_image.outputs.version }}
          target_commitish: ${{ needs.update_action_image.outputs.commit_hash }}
          generate_release_notes: true
