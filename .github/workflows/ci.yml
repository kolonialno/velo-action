name: CI

on: push

env:
  IMAGE: odacom/velo-action

jobs:
  lint:
    runs-on: ubuntu-20.04
    name: lint
    strategy:
      matrix:
        check:
          - pylint --rcfile=.pylintrc --fail-under=8 --output-format=parseable --reports=no velo_action
          - black --check --config=pyproject.toml .
          - flake8 --config='.flake8' .
    steps:
      - uses: actions/checkout@v2

      - name: Read .tool-versions
        uses: marocchino/tool-versions-action@v1
        id: versions

      - uses: actions/setup-python@v2
        with:
          python-version: ${{ steps.versions.outputs.python }}

      - name: Set up Poetry
        uses: snok/install-poetry@v1.1.8
        with:
          version: ${{ steps.versions.outputs.poetry }}
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Load Poetry cache
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: ${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      - name: Run linter
        run: |
          poetry run ${{ matrix.check }}

  test:
    runs-on: ubuntu-20.04
    name: test
    steps:
      - uses: actions/checkout@v2

      - name: Read .tool-versions
        uses: marocchino/tool-versions-action@v1
        id: versions

      - uses: actions/setup-python@v2
        with:
          python-version: ${{ steps.versions.outputs.python }}

      - name: Set up Poetry
        uses: snok/install-poetry@v1.1.8
        with:
          version: ${{ steps.versions.outputs.poetry }}
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Load Poetry cache
        id: cached-poetry-dependencies
        uses: actions/cache@v2.1.6
        with:
          path: .venv
          key: ${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      - run: poetry run pytest . -c pytest.ini --capture=no -v -m "not docker"
        id: pytests

  build:
    runs-on: ubuntu-20.04
    name: build & push
    needs:
      - "lint"
      - "test"
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # all history for all branches and tags.

      - uses: ./
        id: velo

      - uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ env.IMAGE }}:${{ steps.velo.outputs.version }},${{ env.IMAGE }}:latest
          cache-from: type=registry
          cache-to: type=registry
