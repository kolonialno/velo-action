name: CI

on: push

env:
  IMAGE: odacom/velo-action

jobs:
  lint:
    runs-on: ubuntu-20.04
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Cache environment
        id: cached_poetry
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-velo-action-${{ runner.os }}--${{ hashFiles('**/poetry.lock') }}

      - uses: actions/setup-python@v2
        with:
          python-version: "3.9.4"
          architecture: "x64"

      - run: |
          pip install poetry==1.1.6
          poetry config virtualenvs.create true
          poetry config virtualenvs.in-project true

      - if: steps.cached_poetry.outputs.cache-hit != 'true'
        run: |
          poetry install

      - run: poetry run black --check --config=pyproject.toml .
      - run: poetry run flake8 --config='.flake8' .
      - run: poetry run pylint --rcfile=.pylintrc --fail-under=8 velo_action

  test:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2

      - name: Cache environment
        id: cached_poetry
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-velo-action-${{ runner.os }}--${{ hashFiles('**/poetry.lock') }}

      - uses: actions/setup-python@v2
        with:
          python-version: "3.9.4"
          architecture: "x64"

      - run: |
          pip install poetry==1.1.6
          poetry config virtualenvs.create true
          poetry config virtualenvs.in-project true

      - if: steps.cached_poetry.outputs.cache-hit != 'true'
        run: |
          poetry install

      # - run: poetry run pytest . -c pytest.ini --capture=no -v -m "not docker"
      #   id: pytests

  build:
    runs-on: ubuntu-20.04
    needs:
      - "lint"
      - "test"
    name: Build
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Required for GitVersion

      - uses: ./
        id: velo

      - uses: docker/setup-buildx-action@v1

      - uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ env.IMAGE }}:${{ steps.velo.outputs.version }},${{ env.IMAGE }}:latest
          cache-from: type=registry
          cache-to: type=registry
