name: '[ci] Build & Release'

on:
  push:
    paths:
      - .deploy/**
      - velo_action/**
      - .github/workflows/test-build-release.yml

env:
  IMAGE: europe-docker.pkg.dev/nube-hub/docker-public/velo-action

jobs:
  test:
    runs-on: ubuntu-20.04
    name: Test
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Read .tool-versions
        uses: marocchino/tool-versions-action@v1
        id: versions

      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ steps.versions.outputs.python }}

      - name: Set up Poetry
        uses: snok/install-poetry@v1.3
        with:
          version: ${{ steps.versions.outputs.poetry }}
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Load Poetry cache
        id: cached-poetry-dependencies
        uses: actions/cache@v2.1.6
        with:
          path: .venv
          key: ${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      - name: Run tests
        run: poetry run pytest velo_action -c pytest.ini --capture=no -v -m "not docker"
        id: pytests

  build:
    runs-on: ubuntu-20.04
    name: Build & push image
    steps:
      - uses: actions/checkout@v2
        name: Checkout
        with:
          fetch-depth: 0 # required to get a unique ref

      - name: Version
        id: vars
        run: |
          echo "::set-output name=version::$(git rev-parse --short HEAD)"
          echo ${{ steps.vars.outputs.version }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GCP Artifactory
        uses: docker/login-action@v1
        with:
          registry: europe-docker.pkg.dev
          username: _json_key
          password: ${{ secrets.VELO_ACTION_GSA_KEY_PROD_PUBLIC }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: |
            ${{ env.IMAGE }}:${{ steps.vars.outputs.version }}
            ${{ env.IMAGE }}:latest

  release:
    runs-on: ubuntu-20.04
    name: Create release
    needs:
      - test
      - build
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # required to get a unique ref

      - uses: kolonialno/velo-action@v0.3.0
        with:
          create_release: 'True'
          project: velo-action
          service_account_key: ${{ secrets.VELO_ACTION_GSA_KEY_PROD_PUBLIC }}
